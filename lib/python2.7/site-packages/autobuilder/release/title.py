class Title(object):
    def __init__(self):
        self._architecture = None
        self._board = None
        self._built_with = None
        self._gpg_key = None
        self._inherit_parent_downloads = None
        self._inherit_parent_tabs = None
        self._mailinglist_url = None
        self._maintainer = None
        self._parent = None
        self._project_url = None
        self._release_date = None
        self._release_note = None
        self._release_title = None
        self._release_type = None
        self._sponsoring_org = None
        self._tsu_exception = None
        self._yocto_compatible = None

    @property
    def architecture(self):
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        self._architecture = architecture

    @property
    def board(self):
        return self._board

    @board.setter
    def board(self, board):
        self._board = board

    @property
    def built_with(self):
        return self._built_with

    @built_with.setter
    def built_with(self, built_with):
        self._built_with = built_with

    @property
    def gpg_key(self):
        return self._gpg_key

    @gpg_key.setter
    def gpg_key(self, gpg_key):
        self._gpg_key = gpg_key

    @property
    def inherit_parent_downloads(self):
        return self._inherit_parent_downloads

    @inherit_parent_downloads.setter
    def inherit_parent_downloads(self, inherit_parent_downloads):
        self._inherit_parent_downloads = inherit_parent_downloads

    @property
    def inherit_parent_tabs(self):
        return self._inherit_parent_tabs

    @inherit_parent_tabs.setter
    def inherit_parent_tabs(self, inherit_parent_tabs):
        self._inherit_parent_tabs = inherit_parent_tabs

    @property
    def mailinglist_url(self):
        return self._mailinglist_url

    @mailinglist_url.setter
    def mailinglist_url(self, mailinglist_url):
        self._mailinglist_url = mailinglist_url

    @property
    def maintainer(self):
        return self._maintainer

    @maintainer.setter
    def maintainer(self, maintainer):
        self._maintainer = maintainer

    @property
    def parent(self):
        return self._parent

    @parent.setter
    def parent(self, parent):
        self._parent = parent

    @property
    def project_url(self):
        return self._project_url

    @project_url.setter
    def project_url(self, project_url):
        self._project_url = project_url

    @property
    def release_date(self):
        return self._release_date

    @release_date.setter
    def release_date(self, release_date):
        self._release_date = release_date

    @property
    def release_note(self):
        return self._release_note

    @release_note.setter
    def release_note(self, release_note):
        self._release_note = release_note

    @property
    def release_title(self):
        return self._release_title

    @release_title.setter
    def release_title(self, release_title):
        self._release_title = release_title

    @property
    def release_type(self):
        return self._release_type

    @release_type.setter
    def release_type(self, release_type):
        self._release_type = release_type

    @property
    def sponsoring_org(self):
        return self._sponsoring_org

    @sponsoring_org.setter
    def sponsoring_org(self, sponsoring_org):
        self._sponsoring_org = sponsoring_org

    @property
    def tsu_exception(self):
        return self._tsu_exception

    @tsu_exception.setter
    def tsu_exception(self, tsu_exception):
        self._tsu_exception = tsu_exception

    @property
    def yocto_compatible(self):
        return self._yocto_compatible

    @yocto_compatible.setter
    def yocto_compatible(self, yocto_compatible):
        self._yocto_compatible = yocto_compatible

    @gpg_key.setter
    def gpg_key(self, gpg_key):
        self._gpg_key = gpg_key
