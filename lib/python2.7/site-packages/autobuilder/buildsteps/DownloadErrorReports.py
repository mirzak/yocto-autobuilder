'''
Created on Jan 1, 2016

__author__ = "Anibal (alimon) Limon"
__copyright__ = "Copyright 2016, Intel Corp."
__credits__ = ["Anibal Limon"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Anibal Limon"
__email__ = "anibal.limon@linux.intel.com"
'''

import os
from buildbot.steps.transfer import DirectoryDownload
from buildbot.process.buildstep import SKIPPED

from lib.ABTools import get_error_report_worker_dir, \
        get_error_report_controller_dir

class DownloadErrorReports(DirectoryDownload):
    """
        Transfer from master to slave the error reports when bitbake
        fails.
    """
    name = "DownloadErrorReports"

    def __init__(self, factory, argdict=None, **kwargs):
        super(DownloadErrorReports, self).__init__(
                "", "")

    def start(self):
        buildername = self.getProperty('buildername')
        buildnumber = self.getProperty('buildnumber')

        self.mastersrc = get_error_report_controller_dir(buildername,
                buildnumber)
        self.slavedest = get_error_report_worker_dir(buildername)

        if not os.path.exists(self.mastersrc):
            return SKIPPED

        super(DownloadErrorReports, self).start()
