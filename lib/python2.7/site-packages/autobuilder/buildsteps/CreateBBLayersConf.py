'''
Created on Dec 26, 2012

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''

from buildbot.steps.shell import ShellCommand
from twisted.python import log

class CreateBBLayersConf(ShellCommand):
    haltOnFailure = False
    flunkOnFailure = True
    name = "Create BBLayers Configuration"
    def __init__(self, factory, layers, argdict=None, **kwargs):
        self.factory = factory
        self.layers=layers
        self.buildprovider="yocto"
        self.bsplayer=False
        self.bspprovider=""
        self.x32abi=False
        self.bbtext=""
        self.bbtextprepend=""
        self.bbtextappend=""
        self.layerdirs=""
        for k, v in argdict.iteritems():
            setattr(self, k, v)
        self.description = "Create BBLayers Configuration"
        ShellCommand.__init__(self, **kwargs)

    def start(self):
        import os
        fout = ""
        buildername=self.getProperty("buildername")
        branch=self.getProperty("branch")
        workdir=self.getProperty("workdir")
        layerversioncore = self.getProperty("layerversion_core")
        layerversionyocto = self.getProperty("layerversion_yocto")
        layerversionpoky = self.getProperty("layerversion_poky")
        if self.bbtextprepend != "":
            fout = fout +"\n"+self.bbtextprepend
        if self.bbtext:
            if self.bbtext == "#TOASTER":
                fout = fout+"\n"+self.getProperty("custom_bbtext")
            else:
                fout = fout+"\n"+self.bbtext        #check to see if we have a prepend
            #check to see if we have text override
            self.command = "rm -rf ./build/conf/bblayers.conf; echo '" +  fout + "'>> ./build/conf/bblayers.conf"
            self.setProperty("BBLAYERS", fout)
            ShellCommand.start(self)
        else:
            fout = fout + 'LCONF_VERSION = <LCONF> \n'
            fout = fout + 'BBPATH = "${TOPDIR}" \n'
            fout = fout + 'BBFILES ?="" \n'
            fout = fout + 'BBLAYERS += " \ \n'
            ldirs = ['poky', 'oecore', 'bitbake']
            if self.buildprovider == "yocto":
                if int(layerversionpoky) > 2 and int(layerversionyocto) < 0:
                    fout = fout + workdir + "/build/meta \ \n"
                    fout = fout + workdir + "/build/meta-poky \ \n"
                    fout = fout + workdir + "/build/meta-yocto-bsp \ \n"
                    ldirs.append("meta")
                    ldirs.append("meta-poky")
                    ldirs.append("meta-yocto-bsp")
                else:
                    fout = fout + workdir + "/build/meta \ \n"
                    fout = fout + workdir + "/build/meta-yocto \ \n"
                    fout = fout + workdir + "/build/meta-yocto-bsp \ \n"
                    ldirs.append("meta")
                    ldirs.append("meta-yocto")
                    ldirs.append("meta-yocto-bsp")
                if self.x32abi == True:
                    fout = fout + workdir + '/build/meta-x32 \ \n'
                    ldirs.append("meta-x32")
            elif self.buildprovider == "oe":
                fout = fout + workdir + "/build/meta \ \n"
                ldirs.append("meta")

            for layer in self.layers:
                if layer.iterkeys().next() not in ldirs:
                    if (layer[layer.iterkeys().next()].has_key('checkout') and layer[layer.iterkeys().next()]['checkout'] is not False) \
                        or layer[layer.iterkeys().next()].has_key('checkout') is False:
                        if layer.iterkeys().next()=="meta-qt3":
                            # For now, we want meta-qt3 in, no matter the layerversion
                            #if layerversioncore is not None and int(layerversioncore) < 7:
                            fout = fout + workdir + '/build/' + layer.iterkeys().next() + ' \ \n'
                        elif layer.iterkeys().next()=="meta-qt4":
                            if layerversioncore is not None and int(layerversioncore) > 6:
                                fout = fout + workdir + '/build/' + layer.iterkeys().next() + ' \ \n'
                        else:
                            fout = fout + workdir + '/build/' + layer.iterkeys().next() + ' \ \n'
                        ldirs.append(layer.iterkeys().next())

            if list(self.layerdirs):
                for layer in self.layerdirs:
                    if layer not in ldirs:
                        fout = fout + workdir + '/build/' + layer + ' \ \n'
                        ldirs.append(layer)

            fout = fout + '" \n'
            if self.bbtextappend != "":
                fout = fout + self.bbtextappend
            self.command = "LCONF=`cat ./build/conf/bblayers.conf| grep \"LCONF_VERSION =\"|cut -d'=' -f2`; rm -rf ./build/conf/bblayers.conf; echo '" +  fout + "'>> ./build/conf/bblayers.conf; sed -i \"s/<LCONF>/$LCONF/\" ./build/conf/bblayers.conf"
            self.setProperty("BBLAYERS", fout)
            ShellCommand.start(self)

    def describe(self, done=False):
        description = ShellCommand.describe(self,done)
        return description
