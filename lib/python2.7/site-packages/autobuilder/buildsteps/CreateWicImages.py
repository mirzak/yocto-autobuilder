'''
__author__ = "Daniel Istrate"
__copyright__ = "Copyright 2015 Intel Corporation"
__credits__ = ["Daniel Istrate"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Daniel Istrate"
__email__ = "daniel.alexandrux.istrate@intel.com"
'''


from buildbot.steps.shell import ShellCommand
import os
from buildbot.status.results import SUCCESS

class CreateWicImages(ShellCommand):
    haltOnFailure = False
    flunkOnFailure = True
    name = "CreateWicImages"

    def __init__(self, factory, argdict=None, **kwargs):
        self.factory = factory
        self.workerdir = os.getenv('WORKERBASEDIR')
        self.command = ''
        self.machine = None
        self.wic_img_type = None
        self.target_img = None
        self.wic_dir = None

        for k, v in argdict.iteritems():
                setattr(self, k, v)
        self.timeout = 100000
        kwargs['timeout']=self.timeout

        ShellCommand.__init__(self, **kwargs)

    def start(self):
        # Get Machine
        self.machine = self.getProperty("MACHINE")
        self.description = ['Create wic image: %s for %s (%s)' % (self.wic_img_type, self.target_img, self.machine)]
        # Check to see if we an build with directdisk-gpt
        self.layerversion_core = self.getProperty("layerversion_core")
        if self.layerversion_core is not None \
            and int(self.layerversion_core) < 6 \
            and 'directdisk-gpt' in self.wic_img_type:
                self.finished(SUCCESS)
                self.description = ["Skipping directdisk-gpt Build"]
        # Set the wic build directory
        buildername = self.getProperty("buildername")
        self.wic_dir = os.path.join(os.path.join(self.workerdir, buildername), 'build/build/tmp/deploy/wic_images/')
        self.wic_dir += '%s/%s/%s/' % (self.machine, self.wic_img_type, self.target_img)

        # Create wic image 'wic_img_type'
        self.command += '. ./oe-init-build-env && '
        self.command += 'wic create %s -e %s -o %s ' % (self.wic_img_type, self.target_img, self.wic_dir)

        ShellCommand.start(self)
