'''
Created on Feb 15, 2016

__author__ = "Anibal (alimon) Limon"
__copyright__ = "Copyright 2016, Intel Corp."
__credits__ = ["Anibal Limon"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Anibal Limon"
__email__ = "anibal.limon@linux.intel.com"
'''

import os

from buildbot.steps.shell import ShellCommand

DEFAULT_SHELL = 'bash'

class ShellCommandCleanEnv(ShellCommand):
    def __init__(self, factory, argdict=None, **kwargs):
        shell = DEFAULT_SHELL
        if 'SHELL' in kwargs:
            shell = kwargs['SHELL']
            del kwargs['SHELL']

        if 'PENV' in kwargs:
            preserve_env = kwargs['PENV']
            del kwargs['PENV']
        else:
            preserve_env = ['HOME', 'PWD', 'PATH',
                            'http_proxy', 'https_proxy',
                            'ftp_proxy', 'no_proxy', 'GIT_PROXY_COMMAND']

        env_command = self._get_env_cleaned_command(shell, preserve_env)
        self.command = "%s \'%s\'" % (env_command, self.command)
        ShellCommand.__init__(self, **kwargs)

    def _get_env_cleaned_command(self, shell, preserve_env):
        pe_cmd = ''
        for pe in preserve_env:
            pe_cmd += "%s=\"$%s\" " % (pe, pe)

        return "env -i %s %s -c " % (pe_cmd, shell)

class BitbakeShellCommand(ShellCommand):
    def __init__(self, factory, argdict=None, **kwargs):
        super(BitbakeShellCommand, self).__init__(**kwargs)
